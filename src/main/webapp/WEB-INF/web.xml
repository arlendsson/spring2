<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" id="WebApp_ID" version="3.0">


  <display-name>Archetype Created Web Application</display-name>
  
  
  <!-- 스프링 설정 -->
  <servlet>
    <servlet-name>dispatcher</servlet-name>
    <servlet-class>
            org.springframework.web.servlet.DispatcherServlet
    </servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>dispatcher</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>


  <!-- 설정파일 로드 -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
    	/WEB-INF/mybatis/mybatis-context.xml
    	/WEB-INF/dispatcher-servlet.xml
    	/WEB-INF/spring/message-context.xml
    	/WEB-INF/spring/security-context.xml
    </param-value>
  </context-param>
  <listener>
    <listener-class>
            org.springframework.web.context.ContextLoaderListener
    </listener-class>
  </listener>
  
  
  	<!-- http://hellogk.tistory.com/76 -->
  	<!-- 인코딩 설정 -->
  	<filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>
            org.springframework.web.filter.CharacterEncodingFilter
	    </filter-class>
	    <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
	</filter>
	<filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
	</filter-mapping>
  
  	
  	<!-- lucy-xss-filter -->
  	<!-- 크로스사이트스크립트 설정 -->
	<filter>
		<filter-name>xssEscapeServletFilter</filter-name>
		<filter-class>com.navercorp.lucy.security.xss.servletfilter.XssEscapeServletFilter</filter-class>
	</filter>
	<filter-mapping>
	    <filter-name>xssEscapeServletFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	</filter-mapping>
  	
  	
  	<!--  로그인 세션 10분 -->
	<session-config>
        <session-timeout>5</session-timeout>
    </session-config>
  
  
  	<!-- Security filter 추가 --><!-- 출처: http://hamait.tistory.com/325 [HAMA 블로그] -->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>   

    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


	<!-- http://www.baeldung.com/spring-security-session -->
	<listener>
	    <listener-class>
	      org.springframework.security.web.session.HttpSessionEventPublisher
	    </listener-class>
	</listener>


  	<!-- error -->
	<!-- 
	<error-page>
	    <error-code>400</error-code>
	    <location>/error/error400</location>
	</error-page>
	<error-page>
	    <error-code>404</error-code>
	    <location>/error/error404</location>
	</error-page>
	<error-page>
	    <error-code>415</error-code>
	    <location>/error/error415</location>
	</error-page>
	<error-page>
	    <error-code>500</error-code>
	    <location>/error/error500</location>
	</error-page>
	 -->

  
</web-app>